<?xml version="1.0" encoding="UTF-8"?><testrun name="BatsmanServiceTests" project="exercise-td-streams-operations-batsman" tests="14" started="14" failures="1" errors="0" ignored="0">
  <testsuite name="com.stackroute.streams.BatsmanServiceTests" time="0.004" displayname="BatsmanServiceTests" uniqueid="[engine:junit-jupiter]/[class:com.stackroute.streams.BatsmanServiceTests]">
    <testcase name="givenEmptyBatsmanListThenReturnNull" classname="com.stackroute.streams.BatsmanServiceTests" time="0.001" displayname="givenEmptyBatsmanListThenReturnNull()" uniqueid="[engine:junit-jupiter]/[class:com.stackroute.streams.BatsmanServiceTests]/[method:givenEmptyBatsmanListThenReturnNull()]"/>
    <testcase name="givenBatsmanListNullOrEmptyThenReturnEmptyMap" classname="com.stackroute.streams.BatsmanServiceTests" time="0.0" displayname="givenBatsmanListNullOrEmptyThenReturnEmptyMap()" uniqueid="[engine:junit-jupiter]/[class:com.stackroute.streams.BatsmanServiceTests]/[method:givenBatsmanListNullOrEmptyThenReturnEmptyMap()]"/>
    <testcase name="givenBatsmanListAndCountryNameThenReturnHighestRunsScoredByBatsman" classname="com.stackroute.streams.BatsmanServiceTests" time="0.0" displayname="givenBatsmanListAndCountryNameThenReturnHighestRunsScoredByBatsman()" uniqueid="[engine:junit-jupiter]/[class:com.stackroute.streams.BatsmanServiceTests]/[method:givenBatsmanListAndCountryNameThenReturnHighestRunsScoredByBatsman()]"/>
    <testcase name="givenListOfBatsmanWhenSearchedByNonExistingBatsmanNameThenReturnEmptyOptional" classname="com.stackroute.streams.BatsmanServiceTests" time="0.0" displayname="givenListOfBatsmanWhenSearchedByNonExistingBatsmanNameThenReturnEmptyOptional()" uniqueid="[engine:junit-jupiter]/[class:com.stackroute.streams.BatsmanServiceTests]/[method:givenListOfBatsmanWhenSearchedByNonExistingBatsmanNameThenReturnEmptyOptional()]"/>
    <testcase name="givenListOfBatsmanWhenSearchInputsAreNullOrEmptyThenReturnEmptyOptional" classname="com.stackroute.streams.BatsmanServiceTests" time="0.0" displayname="givenListOfBatsmanWhenSearchInputsAreNullOrEmptyThenReturnEmptyOptional()" uniqueid="[engine:junit-jupiter]/[class:com.stackroute.streams.BatsmanServiceTests]/[method:givenListOfBatsmanWhenSearchInputsAreNullOrEmptyThenReturnEmptyOptional()]"/>
    <testcase name="givenBatsmanListAndCountryNameThenReturnPlayerNamesWithTotalRunsMoreThan5000SortedDescendingAsLinkedList" classname="com.stackroute.streams.BatsmanServiceTests" time="0.001" displayname="givenBatsmanListAndCountryNameThenReturnPlayerNamesWithTotalRunsMoreThan5000SortedDescendingAsLinkedList()" uniqueid="[engine:junit-jupiter]/[class:com.stackroute.streams.BatsmanServiceTests]/[method:givenBatsmanListAndCountryNameThenReturnPlayerNamesWithTotalRunsMoreThan5000SortedDescendingAsLinkedList()]"/>
    <testcase name="givenNullInputsForBatsmanListAndCountryCodeThenReturnNull" classname="com.stackroute.streams.BatsmanServiceTests" time="0.0" displayname="givenNullInputsForBatsmanListAndCountryCodeThenReturnNull()" uniqueid="[engine:junit-jupiter]/[class:com.stackroute.streams.BatsmanServiceTests]/[method:givenNullInputsForBatsmanListAndCountryCodeThenReturnNull()]"/>
    <testcase name="givenListOfBatsmanWhenSearchedByNonExistingCountryCodeThenThrowException" classname="com.stackroute.streams.BatsmanServiceTests" time="0.0" displayname="givenListOfBatsmanWhenSearchedByNonExistingCountryCodeThenThrowException()" uniqueid="[engine:junit-jupiter]/[class:com.stackroute.streams.BatsmanServiceTests]/[method:givenListOfBatsmanWhenSearchedByNonExistingCountryCodeThenThrowException()]"/>
    <testcase name="givenBatsmanListAndCountryNameWhenNoBatsmanWithTotalRunsMoreThan5000ThenReturnEmptyOptional" classname="com.stackroute.streams.BatsmanServiceTests" time="0.001" displayname="givenBatsmanListAndCountryNameWhenNoBatsmanWithTotalRunsMoreThan5000ThenReturnEmptyOptional()" uniqueid="[engine:junit-jupiter]/[class:com.stackroute.streams.BatsmanServiceTests]/[method:givenBatsmanListAndCountryNameWhenNoBatsmanWithTotalRunsMoreThan5000ThenReturnEmptyOptional()]">
      <failure>java.lang.AssertionError: should return empty optional for null or empty inputs
Expected: is &lt;Optional.empty&gt;
     but: was &lt;Optional[[]]&gt;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at com.stackroute.streams.BatsmanServiceTests.givenBatsmanListAndCountryNameWhenNoBatsmanWithTotalRunsMoreThan5000ThenReturnEmptyOptional(BatsmanServiceTests.java:127)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:675)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:125)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:132)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:124)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:74)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:104)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:62)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:43)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:35)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:202)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:198)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:137)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)

</failure>
    </testcase>
    <testcase name="givenListOfBatsmanWhenSearchedByBatsmanNameAndCountryCodeIgnoringCaseThenReturnOptionalOfBatsman" classname="com.stackroute.streams.BatsmanServiceTests" time="0.0" displayname="givenListOfBatsmanWhenSearchedByBatsmanNameAndCountryCodeIgnoringCaseThenReturnOptionalOfBatsman()" uniqueid="[engine:junit-jupiter]/[class:com.stackroute.streams.BatsmanServiceTests]/[method:givenListOfBatsmanWhenSearchedByBatsmanNameAndCountryCodeIgnoringCaseThenReturnOptionalOfBatsman()]"/>
    <testcase name="givenBatsmanListAndCountryCodeThenReturnSortedBatsmanNamesInString" classname="com.stackroute.streams.BatsmanServiceTests" time="0.0" displayname="givenBatsmanListAndCountryCodeThenReturnSortedBatsmanNamesInString()" uniqueid="[engine:junit-jupiter]/[class:com.stackroute.streams.BatsmanServiceTests]/[method:givenBatsmanListAndCountryCodeThenReturnSortedBatsmanNamesInString()]"/>
    <testcase name="givenBatsmanListAsNullOrEmptyThenReturnZero" classname="com.stackroute.streams.BatsmanServiceTests" time="0.0" displayname="givenBatsmanListAsNullOrEmptyThenReturnZero()" uniqueid="[engine:junit-jupiter]/[class:com.stackroute.streams.BatsmanServiceTests]/[method:givenBatsmanListAsNullOrEmptyThenReturnZero()]"/>
    <testcase name="givenBatsmanListAndCountryNameWithNullOrEmptyInputsThenReturnEmptyOptional" classname="com.stackroute.streams.BatsmanServiceTests" time="0.0" displayname="givenBatsmanListAndCountryNameWithNullOrEmptyInputsThenReturnEmptyOptional()" uniqueid="[engine:junit-jupiter]/[class:com.stackroute.streams.BatsmanServiceTests]/[method:givenBatsmanListAndCountryNameWithNullOrEmptyInputsThenReturnEmptyOptional()]"/>
    <testcase name="givenBatsmanListThenReturnMapWithBatsmanNameAndTotalRunsWhoPlayedMoreThan50Matches" classname="com.stackroute.streams.BatsmanServiceTests" time="0.0" displayname="givenBatsmanListThenReturnMapWithBatsmanNameAndTotalRunsWhoPlayedMoreThan50Matches()" uniqueid="[engine:junit-jupiter]/[class:com.stackroute.streams.BatsmanServiceTests]/[method:givenBatsmanListThenReturnMapWithBatsmanNameAndTotalRunsWhoPlayedMoreThan50Matches()]"/>
  </testsuite>
</testrun>
